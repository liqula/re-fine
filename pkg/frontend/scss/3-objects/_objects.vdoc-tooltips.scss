.tooltip {
    position: relative;
    border-bottom: 1px dotted black;
}

.tooltip .tooltiptext {
    visibility: hidden;
    position: absolute;
    width: 3000px; // 100% is the span between x-coords of starting
                   // point and end-point of the link selection in the
                   // article text, resp, with a lower bound of
                   // 65.556px.  percentage or px values that
                   // makes more sense would need to take those x-coords
                   // into account, plus some other lengths.  e.g.:
                   // "x-coord of right edge of edit bubble column minux
                   // x-coord of starting point of link span.  can we
                   // achieve this by inlining all the tooltips css?  how
                   // do we handle hover in css only then?
    background-color: black;
    color: white;
    text-align: left;
    border-radius: 6px;
    padding: 5px;
    bottom: 100%;
    left: 50%;
    margin-left: -50%;

    // tooltips are covered by the header.  setting z-index here does
    // not help, because article (and all the usual text in it must be
    // covered by the header, and we can't have a dom tree of which
    // parts are over and other parts are under separate dom tree (or
    // so it seems).
    //
    // one solution would be to implement tooltips like we implemented
    // bubbles.  this has the drawback that it is much less
    // light-weight, and the benefit that it works :).  more
    // investigation needed.
}

.tooltip .tooltiptext::after {
    content: "";
    position: absolute;
    top: 100%;
    left: 15px;
    margin-left: -5px;
    border-width: 5px;
    border-style: solid;
    border-color: black transparent transparent transparent;
}

.tooltip:hover .tooltiptext {
    visibility: visible;
}
